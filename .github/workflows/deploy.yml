name: Deploy to Amazon EC2

on:
  push:
    branches:
      - release

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: cokkri-repo
  ECS_CLUSTER: cokkiri-cluster
  ECS_SERVICE: cokkiri-nginx
  CONTAINER_NAME: cokkiri-nginx

jobs:
  nginx-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install frontend dependencies
        run: npm install --prefix ${{ github.workspace }}

      - name: Build the project
        run: npm run build --prefix ${{ github.workspace }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          HASH=$(git log -1 --pretty=%h)
          IMAGE_ID=$ECR_REGISTRY/$ECR_REPOSITORY:${HASH}
          LATEST_IMAGE_ID=$ECR_REGISTRY/$ECR_REPOSITORY:latest-fe
          docker build --platform linux/amd64 -t $IMAGE_ID -t $LATEST_IMAGE_ID .
          docker push $IMAGE_ID
          docker push $LATEST_IMAGE_ID
          echo "::set-output name=image::$IMAGE_ID"

      - name: Get latest ECS task definition
        run: |
          TASK_DEF=$(aws ecs describe-services --cluster ${ECS_CLUSTER} --services ${ECS_SERVICE} --region ${AWS_REGION} --query "services[0].taskDefinition" --output text)
          aws ecs describe-task-definition --task-definition $TASK_DEF --region ${AWS_REGION} --query "taskDefinition" --output json > task-definition.json
          echo "TASK_DEF=$TASK_DEF" >> $GITHUB_ENV

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true