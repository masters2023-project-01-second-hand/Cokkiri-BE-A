name: Deploy to Amazon EC2

on:
  push:
    branches:
      - release

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: cokkiri-repo
  ECS_CLUSTER_NAME: cokkiri-cluster
  ECS_SERVICE_NAME: cokkiri-service

permissions:
  contents: read

jobs:
  was-build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Checkout
        uses: actions/checkout@v3
        run: |
          touch -c application-prod.yml
          echo "${{ secrets.APPLICATION }}" > application-prod.yml
          mv application-prod.yml src/main/resources/application-prod.yml

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER_NAME }} --service ${{ env.ECS_SERVICE_NAME }} --force-new-deployment
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
